{"version":3,"sources":["lsx-business-directory.scss","_banners.scss","_include-media.scss"],"names":[],"mappings":"AAAA,gEAAA;ACAA,uEAAA;AAMA,8OAQK,iBAAiB,EACjB,iBAAiB,EAAA;;AATtB,4QAYM,aAAa,EACb,gBAAgB,EAAA;;AAbtB,oRAiBM,iBAAiB,EAAA;;AAjBvB,kQAqBM,WAAW,EACX,eAAe,EAAA;;AAtBrB,+XA2BI,eAAc,EAAA;;AA3BlB,wJAoCI,eAAc,EAAA;;AAKjB,4BAzCD,2FA6CK,oBAAoB,EAAA,EACpB;;AC2fD,4BDziBJ,yFAqDI,kBAAkB,EAAA;EArDtB,yGAwDK,kBAAkB,EAAA,EAClB;;ADtDL,gBAAQ;AAER,YAAA;AACA,YACC,wBAAwB,EAAA;;AAGzB,gBACC,oBAAoB,EACpB,oBAAoB,EACpB,aAAa,EACb,8BAA8B,EAC9B,6BAA6B,EACzB,uBAAuB,EACnB,mBAAmB,EAAA;;AAG5B,gBACC,oBAAoB,EACpB,oBAAoB,EACpB,aAAa,EACb,4BAA4B,EAC5B,6BAA6B,EACzB,0BAA0B,EACtB,sBAAsB,EAAA;;AAG/B,mBACC,oBAAoB,EACpB,oBAAoB,EACpB,aAAa,EACb,yBAAyB,EACrB,sBAAsB,EAClB,mBAAmB,EAC3B,wBAAwB,EACpB,qBAAqB,EACjB,uBAAuB,EAAA;;AAGhC,mBACC,YAAY,EAAA;;AAGb,YACC,iBAAiB,EAAA;;AAGlB,cACC,mBAAO,EAAP,WAAO,EAAP,OAAO,EAAA;;AAGR,YACC,aAAa,EACV,wCAAwC,EAC3C,qBAAqB,EACrB,cAAc,EAAA;;AAGf,uBAAA;AAEA,sDAII,aAAM,EACN,mBAAY,EAGb,mBAAmB,EACnB,6BAA6B,EAAA;;AAThC,qDAcE,kBAAkB,EACf,2BAA2B,EAAA;;AAfhC,uEAkBM,oBAAoB,EACpB,mBAAmB,EACnB,6BAA6B,EAAA;;AApBnC,6FAuBO,mBAAmB,EAAA;;AAvB1B,mGA0BQ,qBAAqB,EAAA;;AA1B7B,gHA6BS,kBAAkB,EAAA;;AA7B3B,sGAoCQ,qBAAqB,EAAA;;AApC7B,oHAuCS,YAAY,EAAA;;AAvCrB,+DA8CG,mBAAmB,EAAA;;AAEnB,4CAhDH,+DAiDO,oBAAoB,EACpB,6BAA6B,EAAA,EA0BjC;;AA5EH,iGAwDM,aAAM,EACN,mBAAY,EAGb,mBAAmB,EACnB,6BAA6B,EAAA;;AAE7B,4CA/DL,iGAgEM,gBAAgB,EAAA,EAEjB;;AAlEL,oGAwEM,kBAAkB,EAAA;;AAUxB,uCAEE,mBAAmB,EAAA;;AAFrB,4EAMI,eAAe,EAAA;;AANnB,uJAUK,aAAM,EACN,mBAAY,EAAA;;AAGb,4CAdJ,uJAeK,eAAe,EAAA,EAUhB;;AAPA,mEAlBJ,uJAmBK,eAAe,EAAA,EAMhB;;AAHA,4CAtBJ,uJAuBK,gBAAgB,EAAA,EAEjB;;AAzBJ,yEA4BI,gBAAgB,EAAA;;AA5BpB,+EA+BK,kBAAkB,EAAA;;AA/BvB,0FAkCM,mBAAmB,EAAA;;AAlCzB,0FA2CE,mBAAmB,EAAA;;AAInB,4BA/CF,6CAgDG,WAAW,EAAA,EAEZ;;AAGA,4BArDF,8CAsDG,YAAY,EAAA,EAEb;;AAxDF,gDA2DE,mBAAmB,EAAA;;AA3DrB,wEA+DI,aAAM,EACN,mBAAY,EAEV,mBAAmB,EACnB,6BAA6B,EAAA;;AAnEnC,oEA0EM,aAAM,EACN,mBAAY,EAEb,mBAAmB,EACnB,6BAA6B,EAAA;;AA9ElC,+FAoFO,kBAAkB,EAAA;;AApFzB,2FA8FK,WAAW,EACX,qBAAqB,EAAA;;AA/F1B,4FAoGM,SAAS,EAAA;;AApGf,0GAwGM,cAAc,EACd,eAAe,EAAA;;AAzGrB,6DAgHG,kBAAkB,EACf,sBAAsB,EACtB,kBAAkB,EAGlB,kBAAkB,EAClB,gDAA+C,EAE/C,wCAAuC,EAAA;;AAxH7C,gEA2HO,UAAU,EACV,YAAY,EAAA;;AA5HnB,kJAkIQ,mBAAmB,EAAA;;AAlI3B,uEAsIQ,WAAW,EAAA;;AAtInB,qRAgJI,mBAAmB,EAAA;;AAhJvB,iTAmJK,cAAc,EAAA;;AAnJnB,6CA2JG,kBAAkB,EAAA;;AAIlB,4CA/JH,4DAgKI,mBAAmB,EAAA,EAMpB;;AAtKH,+DAoKI,kBAAkB,EAAA;;AAMtB,mBAEE,mBAAmB,EAAA;;AAFrB,68BAME,iBAAiB,EACjB,kBAAkB,EAAA;;AAPpB,gBAUE,iBAAiB,EAAA;;AAVnB,gBAaE,gBAAgB,EAChB,iBAAiB,EAAA;;AAdnB,gCAkBE,8BAAsB,EAAtB,sBAAsB,EACtB,yBAAyB,EACzB,yBAAyB,EACzB,2DAAgD,EAAhD,mDAAgD,EAChD,mBAAmB,EACnB,oBAAoB,EAAA;;AAvBtB,kDA0BG,kBAAkB,EAAA;;AA1BrB,sFA6BK,gBAAgB,EAChB,kBAAkB,EAAA;;AA9BvB,yFAkCM,mBAAmB,EAAA;;AAlCzB,kDAyCG,0BAA0B,EAC1B,iBAAiB,EACjB,mBAAmB,EAAA;;AA3CtB,kEA6CI,iBAAiB,EAAA;;AA7CrB,oEA+CK,yBAAyB,EAAA;;AA/C9B,yEAiDM,gBAAgB,EAAA;;AAjDtB,gCAyDE,yBAAyB,EACzB,aAAa,EACb,YAAY,EAAA;;AA3Dd,oDA8DG,aAAa,EAAA;;AA9DhB,kDAkEG,aAAa,EACb,kBAAkB,EAClB,mBAAmB,EAAA;;AApEtB,oFAwEK,gBAAgB,EAChB,mBAAmB,EACnB,mBAAmB,EAAA;;AA1ExB,iTA6EK,kBAAkB,EAAA;;AA7EvB,wDAmFG,WAAW,EACX,YAAY,EACZ,yBAAyB,EACzB,YAAY,EAAA;;AAtFf,0DAyFI,YAAY,EAAA;;AAzFhB,+DA2FK,gBAAgB,EAAA;;AAOrB,QACC,aAAa,EAAA;;AAGd,OAAO,oBAAA,EAAqB;;AAA5B,wDAII,2BAA2B,EAAA;;AAJ/B,qDAOI,aAAa,EACb,gBAAgB,EAAA;;AARpB,yDAUK,cAAc,EAAA","file":"../lsx-business-directory.css","sourcesContent":["/**\n * LSX Starter Plugin styles.\n *\n * @package lsx-business-directory\n */\n\n@import 'include-media';\n@import 'banners';\n\n@CHARSET \"UTF-8\";\n\n/* General */\n.lsx-hide {\n\tdisplay: none !important;\n}\n\n.lsx-flex-row {\n\tdisplay: -webkit-box;\n\tdisplay: -ms-flexbox;\n\tdisplay: flex;\n\t-webkit-box-orient: horizontal;\n\t-webkit-box-direction: normal;\n\t    -ms-flex-direction: row;\n\t        flex-direction: row;\n}\n\n.lsx-flex-col {\n\tdisplay: -webkit-box;\n\tdisplay: -ms-flexbox;\n\tdisplay: flex;\n\t-webkit-box-orient: vertical;\n\t-webkit-box-direction: normal;\n\t    -ms-flex-direction: column;\n\t        flex-direction: column;\n}\n\n.lsx-flex-center {\n\tdisplay: -webkit-box;\n\tdisplay: -ms-flexbox;\n\tdisplay: flex;\n\t-webkit-box-align: center;\n\t    -ms-flex-align: center;\n\t        align-items: center;\n\t-webkit-box-pack: center;\n\t    -ms-flex-pack: center;\n\t        justify-content: center;\n}\n\n.lsx-float-right {\n\tfloat: right;\n}\n\n.lsx-bold {\n\tfont-weight: bold;\n}\n\n.lsx-flex-1 {\n\tflex: 1;\n}\n\n.lsx-grid {\n\tdisplay: grid;\n    grid-template-columns: 265px 265px 265px;\n\tgrid-auto-rows: 401px;\n\tgrid-gap: 25px;\n}\n\n/* Business Directory */\n\n.lsx-business-directory-wrapper {\n\t.business-facets {\n\t\th3 {\n\t\t\tmargin: {\n\t\t\t\ttop: 0;\n\t\t\t\tbottom: 15px;\n\t\t\t}\n\n\t\t\tpadding-bottom: 5px;\n\t\t\tborder-bottom: 1px solid #ddd;\n\t\t}\n\t}\n\n\t.business-listings {\n\t\tpadding-left: 30px;\n    \tborder-left: 1px solid #ddd;\n\n    \t.business-filters {\n    \t\tpadding-bottom: 15px;\n\t\t    margin-bottom: 25px;\n\t\t    border-bottom: 1px solid #ddd;\n\n\t\t    .business-filters-top {\n\t\t    \tmargin-bottom: 20px;\n\n\t\t    \t& > div {\n\t\t    \t\tdisplay: inline-block;\n\n\t\t    \t\t&.facetwp-sort {\n\t\t    \t\t\tmargin-right: 10px;\n\t\t    \t\t}\n\t\t    \t}\n\t\t    }\n\n\t\t    .business-filters-bottom {\n\t\t    \t& > div {\n\t\t    \t\tdisplay: inline-block;\n\n\t\t    \t\t&.facetwp-pager {\n\t\t    \t\t\tfloat: right;\n\t\t    \t\t}\n\t\t    \t}\n\t\t    }\n    \t}\n\n\t\t.business {\n\t\t\tmargin-bottom: 20px;\n\n\t\t\t@media only screen and (max-width: 991px) {\n\t\t\t    padding-bottom: 15px;\n\t\t\t    border-bottom: 1px solid #ddd;\n\t\t\t}\n\n\t\t\t.business-content {\n\t\t\t\t.business-title {\n\t\t\t\t\tmargin: {\n\t\t\t\t\t\ttop: 0;\n\t\t\t\t\t\tbottom: 15px;\n\t\t\t\t\t}\n\n\t\t\t\t\tpadding-bottom: 5px;\n\t\t\t\t\tborder-bottom: 1px solid #ddd;\n\n\t\t\t\t\t@media only screen and (max-width: 991px) {\n\t\t\t\t\t\tmargin-top: 15px;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t.business-details {\n\t\t\t\t.business-meta {\n\t\t\t\t\tdiv {\n\t\t\t\t\t\tmargin-bottom: 5px;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n\n\n// Single Business\n.business-directory {\n\t.business-header {\n\t\tmargin-bottom: 40px;\n\n\t\t.entry-header-content {\n\t\t\th2.entry-title {\n\t\t\t\tfont-size: 40px;\n\t\t\t}\n\t\t\th1.entry-title, h2.entry-title {\n\t\t\t\tmargin: {\n\t\t\t\t\ttop: 0;\n\t\t\t\t\tbottom: 10px;\n\t\t\t\t}\n\n\t\t\t\t@media only screen and (max-width: 767px) {\n\t\t\t\t\tfont-size: 22px;\n\t\t\t\t}\n\n\t\t\t\t@media only screen and (min-width: 768px) and (max-width: 991px) {\n\t\t\t\t\tfont-size: 28px;\n\t\t\t\t}\n\n\t\t\t\t@media only screen and (max-width: 991px) {\n\t\t\t\t\tmargin-top: 15px;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t.entry-meta {\n\t\t\t\ttext-align: left;\n\n\t\t\t\t> div {\n\t\t\t\t\tmargin-bottom: 5px;\n\n\t\t\t\t\t&:last-child {\n\t\t\t\t\t\tmargin-bottom: 20px;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t.business-content-left,\n\t.business-content-right {\n\t\tmargin-bottom: 30px;\n\t}\n\n\t.business-content-left {\n\t\t@media (min-width: 992px) {\n\t\t\tfloat: left;\n\t\t}\n\t}\n\n\t.business-content-right {\n\t\t@media (min-width: 992px) {\n\t\t\tfloat: right;\n\t\t}\n\t}\n\n\t.business-content-section {\n\t\tmargin-bottom: 30px;\n\n\t\t.business-section-title {\n\t\t\tmargin: {\n\t\t\t\ttop: 0;\n\t\t\t\tbottom: 18px;\n\t\t\t}\n\t\t    padding-bottom: 8px;\n\t\t    border-bottom: 1px solid #ddd;\n\t\t}\n\n\t\t&.branches {\n\t\t\t.branch {\n\t\t\t\th4 {\n\t\t\t\t\tmargin: {\n\t\t\t\t\t\ttop: 0;\n\t\t\t\t\t\tbottom: 15px;\n\t\t\t\t\t}\n\t\t\t\t\tpadding-bottom: 5px;\n\t\t\t\t\tborder-bottom: 1px solid #ddd;\n\t\t\t\t}\n\n\t\t\t\t.branch-content {\n\t\t\t\t\t.col-md-4 {\n\t\t\t\t\t\tdiv {\n\t\t\t\t\t\t\tmargin-bottom: 5px;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t&.promotions {\n\t\t\t.promotion {\n\t\t\t\t.promotion-thumbnail {\n\t\t\t\t\tfloat: left;\n\t\t\t\t\tmargin: 0 30px 30px 0;\n\t\t\t\t}\n\n\t\t\t\t.promotion-content {\n\t\t\t\t\th4 {\n\t\t\t\t\t\tmargin: 0;\n\t\t\t\t\t}\n\n\t\t\t\t\t.promotion-price {\n\t\t\t\t\t\tmargin: 10px 0;\n\t\t\t\t\t\tfont-size: 18px;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t&.contact-form {\n\t\t\tpadding: 20px 30px;\n\t\t    border: 1px solid #ccc;\n\t\t    text-align: center;\n\t\t    -webkit-border-radius: 3px;\n\t\t    -moz-border-radius: 3px;\n\t\t    border-radius: 3px;\n\t\t    -webkit-box-shadow: 0 1px 3px rgba(0, 0, 0, .1);\n\t\t    -moz-box-shadow: 0 1px 3px rgba(0, 0, 0, .1);\n\t\t    box-shadow: 0 1px 3px rgba(0, 0, 0, .1);\n\n\t\t    h4 {\n\t\t    \tpadding: 0;\n\t\t    \tborder: none;\n\t\t    }\n\n\t\t    form {\n\t\t    \tinput,\n\t\t    \ttextarea {\n\t\t    \t\tmargin-bottom: 10px;\n\t\t    \t}\n\n\t\t    \t.btn {\n\t\t    \t\twidth: 100%;\n\t\t    \t}\n\t\t    }\n\t\t}\n\n\t\t&.contact-info {\n\t\t\t.telephone,\n\t\t\t.email,\n\t\t\t.website,\n\t\t\t.address {\n\t\t\t\tmargin-bottom: 10px;\n\n\t\t\t\tstrong {\n\t\t\t\t\tdisplay: block;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t.related-businesses {\n\t\th2 {\n\t\t\ttext-align: center;\n\t\t}\n\n\t\t.related-business {\n\t\t\t@media only screen and (max-width: 991px) {\n\t\t\t\tmargin-bottom: 30px;\n\t\t\t}\n\n\t\t\th3 {\n\t\t\t\tmargin: 20px 0 0px;\n\t\t\t}\n\t\t}\n\t}\n}\n\n.archive {\n\tarticle {\n\t\tmargin-bottom: 28px;\n\n\t}\n\t.col-xs-1, .col-sm-1, .col-md-1, .col-lg-1, .col-xs-2, .col-sm-2, .col-md-2, .col-lg-2, .col-xs-3, .col-sm-3, .col-md-3, .col-lg-3, .col-xs-4, .col-sm-4, .col-md-4, .col-lg-4, .col-xs-5, .col-sm-5, .col-md-5, .col-lg-5, .col-xs-6, .col-sm-6, .col-md-6, .col-lg-6, .col-xs-7, .col-sm-7, .col-md-7, .col-lg-7, .col-xs-8, .col-sm-8, .col-md-8, .col-lg-8, .col-xs-9, .col-sm-9, .col-md-9, .col-lg-9, .col-xs-10, .col-sm-10, .col-md-10, .col-lg-10, .col-xs-11, .col-sm-11, .col-md-11, .col-lg-11, .col-xs-12, .col-sm-12, .col-md-12, .col-lg-12 {\n\t\tpadding-left: 0px;\n\t\tpadding-right: 0px;\n\t}\n\t.fas {\n\t\tmargin-right: 5px;\n\t}\n\t.row {\n\t\tmargin-left: 0px;\n\t\tmargin-right: 0px;\n\t}\n\n\t.business.row-layout {\n\t\tbox-sizing: border-box;\n\t\tborder: 1px solid #EEEEEE;\n\t\tbackground-color: #FFFFFF;\n\t\tbox-shadow: 1px 2px 6px 0 rgba(155,155,155,0.45);\n\t\tpadding-right: 10px;\n\t\tpadding-bottom: 10px;\n\n\t\t.business-content {\n\t\t\tpadding-left: 20px;\n\t\t\t.business-details {\n\t\t\t\th4.business-title {\n\t\t\t\t\tmargin-top: 14px;\n\t\t\t\t\tmargin-bottom: 9px;\n\t\t\t\t}\n\t\t\t\t.business-meta {\n\t\t\t\t\t>div {\n\t\t\t\t\t\tmargin-bottom: 10px;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t}\n\t\t.business-excerpt {\n\t\t\tborder-top: 1px solid #ddd;\n\t\t\tpadding-top: 10px;\n\t\t\tpadding-bottom: 4px;\n\t\t\t.read-more-link {\n\t\t\t\tpadding-top: 10px;\n\t\t\t\ta {\n\t\t\t\t\ttext-transform: uppercase;\n\t\t\t\t\t.fas {\n\t\t\t\t\t\tmargin-left: 5px;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t.business.col-layout {\n\t\tbackground-color: #FFFFFF;\n\t\theight: 401px;\n\t\twidth: 265px;\n\n\t\t.business-thumbnail {\n\t\t\theight: 150px;\n\t\t}\n\n\t\t.business-content {\n\t\t\theight: 206px;\n\t\t\tpadding-left: 15px;\n\t\t\tpadding-right: 15px;\n\n\t\t\t.business-details {\n\t\t\t\t.business-title {\n\t\t\t\t\tmargin-top: 19px;\n\t\t\t\t\tmargin-bottom: 14px;\n\t\t\t\t\tborder-bottom: none;\n\t\t\t\t}\n\t\t\t\t.category, .region, .telephone, .email {\n\t\t\t\t\tmargin-bottom: 2px;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t.business-button button {\n\t\t\twidth: 100%;\n\t\t\theight: 45px;\n\t\t\tbackground-color: #418AD0;\n\t\t\tborder: none;\n\n\t\t\ta {\n\t\t\t\tcolor: white;\n\t\t\t\t.fas {\n\t\t\t\t\tmargin-left: 5px;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n\n#gmap {\n\theight: 500px;\n}\n\nbody { /* For specificity */\n\t&.single-business-directory {\n\t\tarticle {\n\t\t\th1.entry-title {\n\t\t\t\tborder-bottom: 0 !important;\n\t\t\t}\n\t\t\t.entry-meta {\n\t\t\t\tborder-top: 0;\n\t\t\t\tborder-bottom: 0;\n\t\t\t\t> * {\n\t\t\t\t\tdisplay: block;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}","/**\n * Business Directory Banner Styles.\n *\n * @package lsx-business-directory\n */\n\nbody {\n\t// General Banner\n\t&.single-business-directory,\n\t&.archive.post-type-archive-business-directory {\n\t\t&:not(.using-gutenberg):not(.banner-disabled) {\n\t\t\t.business-banner {\n\t\n\t\t\t\t.wp-block-cover {\n\t\t\t\t\tpadding-top: 36px;\n\t\t\t\t\tmin-height: 214px;\n\t\t\t\t\t\n\t\t\t\t\t.archive-title {\n\t\t\t\t\t\tmargin-top: 0;\n\t\t\t\t\t\tmargin-bottom: 0;\n\t\t\t\t\t}\n\t\n\t\t\t\t\t&.has-background-img {\n\t\t\t\t\t\tmin-height: 430px;\n\t\t\t\t\t}\n\t\n\t\t\t\t\t&.alignfull {\n\t\t\t\t\t\twidth: 100%;\n\t\t\t\t\t\tmax-width: 100%;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t#primary, #secondary {\n\t\t\t\tmargin-top:0px;\n\t\t\t}\n\t\t}\n\t}\n\n\t// Post Type Archive\n\t&.archive.post-type-archive-business-directory:not(.using-gutenberg):not(.banner-disabled) {\n\t\t.wrap.container {\n\t\t\t.content.role>div:first-child#primary {\n\t\t\t\tmargin-top:0px;\n\t\t\t}\n\t\t}\n\t}\n\n\t@media (min-width: 320px) {\n\t\t&.lsx:not(.single-post):not(.page-has-banner){\n\t\t\t.archive-header-wrapper {\n\t\t\t\t.archive-header {\n\t\t\t\t\tpadding-bottom: 64px;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t@include media('>=tablet') {\n\t\t&.post-type-archive-business-directory.banner-disabled {\n\t\t\t.facetwp-sidebar.widget-area {\n\t\t\t\tmargin-top: 8.4rem;\n\n\t\t\t\t+ .content-area {\n\t\t\t\t\tmargin-top: 8.4rem;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}","@charset \"UTF-8\";\n\n//     _            _           _                           _ _\n//    (_)          | |         | |                         | (_)\n//     _ _ __   ___| |_   _  __| | ___   _ __ ___   ___  __| |_  __ _\n//    | | '_ \\ / __| | | | |/ _` |/ _ \\ | '_ ` _ \\ / _ \\/ _` | |/ _` |\n//    | | | | | (__| | |_| | (_| |  __/ | | | | | |  __/ (_| | | (_| |\n//    |_|_| |_|\\___|_|\\__,_|\\__,_|\\___| |_| |_| |_|\\___|\\__,_|_|\\__,_|\n//\n//      Simple, elegant and maintainable media queries in Sass\n//                        v1.4.9\n//\n//                http://include-media.com\n//\n//         Authors: Eduardo Boucas (@eduardoboucas)\n//                  Hugo Giraudel (@hugogiraudel)\n//\n//      This project is licensed under the terms of the MIT license\n\n\n////\n/// include-media library public configuration\n/// @author Eduardo Boucas\n/// @access public\n////\n\n\n///\n/// Creates a list of global breakpoints\n///\n/// @example scss - Creates a single breakpoint with the label `phone`\n///  $breakpoints: ('phone': 320px);\n///\n$breakpoints: (\n  'phone': 768px,\n  'tablet': 992px,\n  'desktop': 1200px\n) !default;\n\n\n///\n/// Creates a list of static expressions or media types\n///\n/// @example scss - Creates a single media type (screen)\n///  $media-expressions: ('screen': 'screen');\n///\n/// @example scss - Creates a static expression with logical disjunction (OR operator)\n///  $media-expressions: (\n///    'retina2x': '(-webkit-min-device-pixel-ratio: 2), (min-resolution: 192dpi)'\n///  );\n///\n$media-expressions: (\n  'screen': 'screen',\n  'print': 'print',\n  'handheld': 'handheld',\n  'landscape': '(orientation: landscape)',\n  'portrait': '(orientation: portrait)',\n  'retina2x': '(-webkit-min-device-pixel-ratio: 2), (min-resolution: 192dpi), (min-resolution: 2dppx)',\n  'retina3x': '(-webkit-min-device-pixel-ratio: 3), (min-resolution: 350dpi), (min-resolution: 3dppx)'\n) !default;\n\n\n///\n/// Defines a number to be added or subtracted from each unit when declaring breakpoints with exclusive intervals\n///\n/// @example scss - Interval for pixels is defined as `1` by default\n///  @include media('>128px') {}\n///\n///  /* Generates: */\n///  @media (min-width: 129px) {}\n///\n/// @example scss - Interval for ems is defined as `0.01` by default\n///  @include media('>20em') {}\n///\n///  /* Generates: */\n///  @media (min-width: 20.01em) {}\n///\n/// @example scss - Interval for rems is defined as `0.1` by default, to be used with `font-size: 62.5%;`\n///  @include media('>2.0rem') {}\n///\n///  /* Generates: */\n///  @media (min-width: 2.1rem) {}\n///\n$unit-intervals: (\n  'px': 1,\n  'em': 0.01,\n  'rem': 0.1,\n  '': 0\n) !default;\n\n///\n/// Defines whether support for media queries is available, useful for creating separate stylesheets\n/// for browsers that don't support media queries.\n///\n/// @example scss - Disables support for media queries\n///  $im-media-support: false;\n///  @include media('>=tablet') {\n///    .foo {\n///      color: tomato;\n///    }\n///  }\n///\n///  /* Generates: */\n///  .foo {\n///    color: tomato;\n///  }\n///\n$im-media-support: true !default;\n\n///\n/// Selects which breakpoint to emulate when support for media queries is disabled. Media queries that start at or\n/// intercept the breakpoint will be displayed, any others will be ignored.\n///\n/// @example scss - This media query will show because it intercepts the static breakpoint\n///  $im-media-support: false;\n///  $im-no-media-breakpoint: 'desktop';\n///  @include media('>=tablet') {\n///    .foo {\n///      color: tomato;\n///    }\n///  }\n///\n///  /* Generates: */\n///  .foo {\n///    color: tomato;\n///  }\n///\n/// @example scss - This media query will NOT show because it does not intercept the desktop breakpoint\n///  $im-media-support: false;\n///  $im-no-media-breakpoint: 'tablet';\n///  @include media('>=desktop') {\n///    .foo {\n///      color: tomato;\n///    }\n///  }\n///\n///  /* No output */\n///\n$im-no-media-breakpoint: 'desktop' !default;\n\n///\n/// Selects which media expressions are allowed in an expression for it to be used when media queries\n/// are not supported.\n///\n/// @example scss - This media query will show because it intercepts the static breakpoint and contains only accepted media expressions\n///  $im-media-support: false;\n///  $im-no-media-breakpoint: 'desktop';\n///  $im-no-media-expressions: ('screen');\n///  @include media('>=tablet', 'screen') {\n///    .foo {\n///      color: tomato;\n///    }\n///  }\n///\n///   /* Generates: */\n///   .foo {\n///     color: tomato;\n///   }\n///\n/// @example scss - This media query will NOT show because it intercepts the static breakpoint but contains a media expression that is not accepted\n///  $im-media-support: false;\n///  $im-no-media-breakpoint: 'desktop';\n///  $im-no-media-expressions: ('screen');\n///  @include media('>=tablet', 'retina2x') {\n///    .foo {\n///      color: tomato;\n///    }\n///  }\n///\n///  /* No output */\n///\n$im-no-media-expressions: ('screen', 'portrait', 'landscape') !default;\n\n////\n/// Cross-engine logging engine\n/// @author Hugo Giraudel\n/// @access private\n////\n\n\n///\n/// Log a message either with `@error` if supported\n/// else with `@warn`, using `feature-exists('at-error')`\n/// to detect support.\n///\n/// @param {String} $message - Message to log\n///\n@function im-log($message) {\n  @if feature-exists('at-error') {\n    @error $message;\n  } @else {\n    @warn $message;\n    $_: noop();\n  }\n\n  @return $message;\n}\n\n\n///\n/// Wrapper mixin for the log function so it can be used with a more friendly\n/// API than `@if im-log('..') {}` or `$_: im-log('..')`. Basically, use the function\n/// within functions because it is not possible to include a mixin in a function\n/// and use the mixin everywhere else because it's much more elegant.\n///\n/// @param {String} $message - Message to log\n///\n@mixin log($message) {\n  @if im-log($message) {}\n}\n\n\n///\n/// Function with no `@return` called next to `@warn` in Sass 3.3\n/// to trigger a compiling error and stop the process.\n///\n@function noop() {}\n\n///\n/// Determines whether a list of conditions is intercepted by the static breakpoint.\n///\n/// @param {Arglist}   $conditions  - Media query conditions\n///\n/// @return {Boolean} - Returns true if the conditions are intercepted by the static breakpoint\n///\n@function im-intercepts-static-breakpoint($conditions...) {\n  $no-media-breakpoint-value: map-get($breakpoints, $im-no-media-breakpoint);\n\n  @if not $no-media-breakpoint-value {\n    @if im-log('`#{$im-no-media-breakpoint}` is not a valid breakpoint.') {}\n  }\n\n  @each $condition in $conditions {\n    @if not map-has-key($media-expressions, $condition) {\n      $operator: get-expression-operator($condition);\n      $prefix: get-expression-prefix($operator);\n      $value: get-expression-value($condition, $operator);\n\n      @if ($prefix == 'max' and $value <= $no-media-breakpoint-value) or\n          ($prefix == 'min' and $value > $no-media-breakpoint-value) {\n        @return false;\n      }\n    } @else if not index($im-no-media-expressions, $condition) {\n      @return false;\n    }\n  }\n\n  @return true;\n}\n\n////\n/// Parsing engine\n/// @author Hugo Giraudel\n/// @access private\n////\n\n\n///\n/// Get operator of an expression\n///\n/// @param {String} $expression - Expression to extract operator from\n///\n/// @return {String} - Any of `>=`, `>`, `<=`, `<`, `≥`, `≤`\n///\n@function get-expression-operator($expression) {\n  @each $operator in ('>=', '>', '<=', '<', '≥', '≤') {\n    @if str-index($expression, $operator) {\n      @return $operator;\n    }\n  }\n\n  // It is not possible to include a mixin inside a function, so we have to\n  // rely on the `im-log(..)` function rather than the `log(..)` mixin. Because\n  // functions cannot be called anywhere in Sass, we need to hack the call in\n  // a dummy variable, such as `$_`. If anybody ever raise a scoping issue with\n  // Sass 3.3, change this line in `@if im-log(..) {}` instead.\n  $_: im-log('No operator found in `#{$expression}`.');\n}\n\n\n///\n/// Get dimension of an expression, based on a found operator\n///\n/// @param {String} $expression - Expression to extract dimension from\n/// @param {String} $operator - Operator from `$expression`\n///\n/// @return {String} - `width` or `height` (or potentially anything else)\n///\n@function get-expression-dimension($expression, $operator) {\n  $operator-index: str-index($expression, $operator);\n  $parsed-dimension: str-slice($expression, 0, $operator-index - 1);\n  $dimension: 'width';\n\n  @if str-length($parsed-dimension) > 0 {\n    $dimension: $parsed-dimension;\n  }\n\n  @return $dimension;\n}\n\n\n///\n/// Get dimension prefix based on an operator\n///\n/// @param {String} $operator - Operator\n///\n/// @return {String} - `min` or `max`\n///\n@function get-expression-prefix($operator) {\n  @return if(index(('<', '<=', '≤'), $operator), 'max', 'min');\n}\n\n\n///\n/// Get value of an expression, based on a found operator\n///\n/// @param {String} $expression - Expression to extract value from\n/// @param {String} $operator - Operator from `$expression`\n///\n/// @return {Number} - A numeric value\n///\n@function get-expression-value($expression, $operator) {\n  $operator-index: str-index($expression, $operator);\n  $value: str-slice($expression, $operator-index + str-length($operator));\n\n  @if map-has-key($breakpoints, $value) {\n    $value: map-get($breakpoints, $value);\n  } @else {\n    $value: to-number($value);\n  }\n\n  $interval: map-get($unit-intervals, unit($value));\n\n  @if not $interval {\n    // It is not possible to include a mixin inside a function, so we have to\n    // rely on the `im-log(..)` function rather than the `log(..)` mixin. Because\n    // functions cannot be called anywhere in Sass, we need to hack the call in\n    // a dummy variable, such as `$_`. If anybody ever raise a scoping issue with\n    // Sass 3.3, change this line in `@if im-log(..) {}` instead.\n    $_: im-log('Unknown unit `#{unit($value)}`.');\n  }\n\n  @if $operator == '>' {\n    $value: $value + $interval;\n  } @else if $operator == '<' {\n    $value: $value - $interval;\n  }\n\n  @return $value;\n}\n\n\n///\n/// Parse an expression to return a valid media-query expression\n///\n/// @param {String} $expression - Expression to parse\n///\n/// @return {String} - Valid media query\n///\n@function parse-expression($expression) {\n  // If it is part of $media-expressions, it has no operator\n  // then there is no need to go any further, just return the value\n  @if map-has-key($media-expressions, $expression) {\n    @return map-get($media-expressions, $expression);\n  }\n\n  $operator: get-expression-operator($expression);\n  $dimension: get-expression-dimension($expression, $operator);\n  $prefix: get-expression-prefix($operator);\n  $value: get-expression-value($expression, $operator);\n\n  @return '(#{$prefix}-#{$dimension}: #{$value})';\n}\n\n///\n/// Slice `$list` between `$start` and `$end` indexes\n///\n/// @access private\n///\n/// @param {List} $list - List to slice\n/// @param {Number} $start [1] - Start index\n/// @param {Number} $end [length($list)] - End index\n///\n/// @return {List} Sliced list\n///\n@function slice($list, $start: 1, $end: length($list)) {\n  @if length($list) < 1 or $start > $end {\n    @return ();\n  }\n\n  $result: ();\n\n  @for $i from $start through $end {\n    $result: append($result, nth($list, $i));\n  }\n\n  @return $result;\n}\n\n////\n/// String to number converter\n/// @author Hugo Giraudel\n/// @access private\n////\n\n\n///\n/// Casts a string into a number\n///\n/// @param {String | Number} $value - Value to be parsed\n///\n/// @return {Number}\n///\n@function to-number($value) {\n  @if type-of($value) == 'number' {\n    @return $value;\n  } @else if type-of($value) != 'string' {\n    $_: im-log('Value for `to-number` should be a number or a string.');\n  }\n\n  $first-character: str-slice($value, 1, 1);\n  $result: 0;\n  $digits: 0;\n  $minus: ($first-character == '-');\n  $numbers: ('0': 0, '1': 1, '2': 2, '3': 3, '4': 4, '5': 5, '6': 6, '7': 7, '8': 8, '9': 9);\n\n  // Remove +/- sign if present at first character\n  @if ($first-character == '+' or $first-character == '-') {\n    $value: str-slice($value, 2);\n  }\n\n  @for $i from 1 through str-length($value) {\n    $character: str-slice($value, $i, $i);\n\n    @if not (index(map-keys($numbers), $character) or $character == '.') {\n      @return to-length(if($minus, -$result, $result), str-slice($value, $i))\n    }\n\n    @if $character == '.' {\n      $digits: 1;\n    } @else if $digits == 0 {\n      $result: $result * 10 + map-get($numbers, $character);\n    } @else {\n      $digits: $digits * 10;\n      $result: $result + map-get($numbers, $character) / $digits;\n    }\n  }\n\n  @return if($minus, -$result, $result);\n}\n\n\n///\n/// Add `$unit` to `$value`\n///\n/// @param {Number} $value - Value to add unit to\n/// @param {String} $unit - String representation of the unit\n///\n/// @return {Number} - `$value` expressed in `$unit`\n///\n@function to-length($value, $unit) {\n  $units: ('px': 1px, 'cm': 1cm, 'mm': 1mm, '%': 1%, 'ch': 1ch, 'pc': 1pc, 'in': 1in, 'em': 1em, 'rem': 1rem, 'pt': 1pt, 'ex': 1ex, 'vw': 1vw, 'vh': 1vh, 'vmin': 1vmin, 'vmax': 1vmax);\n\n  @if not index(map-keys($units), $unit) {\n    $_: im-log('Invalid unit `#{$unit}`.');\n  }\n\n  @return $value * map-get($units, $unit);\n}\n\n///\n/// This mixin aims at redefining the configuration just for the scope of\n/// the call. It is helpful when having a component needing an extended\n/// configuration such as custom breakpoints (referred to as tweakpoints)\n/// for instance.\n///\n/// @author Hugo Giraudel\n///\n/// @param {Map} $tweakpoints [()] - Map of tweakpoints to be merged with `$breakpoints`\n/// @param {Map} $tweak-media-expressions [()] - Map of tweaked media expressions to be merged with `$media-expression`\n///\n/// @example scss - Extend the global breakpoints with a tweakpoint\n///  @include media-context(('custom': 678px)) {\n///    .foo {\n///      @include media('>phone', '<=custom') {\n///       // ...\n///      }\n///    }\n///  }\n///\n/// @example scss - Extend the global media expressions with a custom one\n///  @include media-context($tweak-media-expressions: ('all': 'all')) {\n///    .foo {\n///      @include media('all', '>phone') {\n///       // ...\n///      }\n///    }\n///  }\n///\n/// @example scss - Extend both configuration maps\n///  @include media-context(('custom': 678px), ('all': 'all')) {\n///    .foo {\n///      @include media('all', '>phone', '<=custom') {\n///       // ...\n///      }\n///    }\n///  }\n///\n@mixin media-context($tweakpoints: (), $tweak-media-expressions: ()) {\n  // Save global configuration\n  $global-breakpoints: $breakpoints;\n  $global-media-expressions: $media-expressions;\n\n  // Update global configuration\n  $breakpoints: map-merge($breakpoints, $tweakpoints) !global;\n  $media-expressions: map-merge($media-expressions, $tweak-media-expressions) !global;\n\n  @content;\n\n  // Restore global configuration\n  $breakpoints: $global-breakpoints !global;\n  $media-expressions: $global-media-expressions !global;\n}\n\n////\n/// include-media public exposed API\n/// @author Eduardo Boucas\n/// @access public\n////\n\n\n///\n/// Generates a media query based on a list of conditions\n///\n/// @param {Arglist}   $conditions  - Media query conditions\n///\n/// @example scss - With a single set breakpoint\n///  @include media('>phone') { }\n///\n/// @example scss - With two set breakpoints\n///  @include media('>phone', '<=tablet') { }\n///\n/// @example scss - With custom values\n///  @include media('>=358px', '<850px') { }\n///\n/// @example scss - With set breakpoints with custom values\n///  @include media('>desktop', '<=1350px') { }\n///\n/// @example scss - With a static expression\n///  @include media('retina2x') { }\n///\n/// @example scss - Mixing everything\n///  @include media('>=350px', '<tablet', 'retina3x') { }\n///\n@mixin media($conditions...) {\n  @if ($im-media-support and length($conditions) == 0) or\n      (not $im-media-support and im-intercepts-static-breakpoint($conditions...)) {\n    @content;\n  } @else if ($im-media-support and length($conditions) > 0) {\n    @media #{unquote(parse-expression(nth($conditions, 1)))} {\n      // Recursive call\n      @include media(slice($conditions, 2)...) {\n        @content;\n      }\n    }\n  }\n}\n"]}